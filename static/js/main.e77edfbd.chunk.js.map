{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteContact","a","delete","name","age","address","className","style","cursor","onClick","bind","float","color","to","marginRight","prototypes","PropTypes","string","isRequired","email","phone","Contacts","Fragment","TextInputGroup","label","placeHolder","error","onChange","htmlFor","classNames","placeholder","defaultProps","AddContact","target","onSubmit","preventDefault","newContact","post","response","history","push","EditContact","componentDidMount","match","params","put","Header","branding","NotFound","Test","title","completed","console","log","fetch","then","json","complete","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e77edfbd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? (contact= action.payload) : contact\n        )\n      };\n    default:\n    // do nothing\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = (id, e) => {\n    this.setState({\n      ...this.state,\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n  onDeleteContact = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    let { name, age, address, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              <h4>\n                {name}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onShowClick.bind(this, name, dispatch)}\n                ></i>\n                <i\n                  onClick={this.onDeleteContact.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                ></i>\n                <Link to={`contacts/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"16px\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <div className=\"card card-body mb-3\">\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Email: {age}</li>\n                    <li className=\"list-group-item\">Phone Number:{address}</li>\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.prototypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact </span>List\n              </h1>\n              {value.contacts.map(contact => (\n                <Contact contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeHolder,\n  type,\n  error,\n  onChange\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"{name}\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classNames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeHolder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error} </div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.object\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    error: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ error: { name: \"Name is required\" } });\n    }\n    if (email === \"\") {\n      this.setState({\n        error: { email: \"Email is required\" }\n      });\n    }\n    if (phone === \"\") {\n      this.setState({\n        error: { phone: \"Phone is required\" }\n      });\n    }\n\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      email: email,\n      phone: phone\n    };\n    const response = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, error } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card-mb-3\">\n              <div className=\"card-header\">\n                <h1>Adding a contact</h1>\n                <div className=\"card-body\">\n                  <form>\n                    <TextInputGroup\n                      name=\"name\"\n                      label=\"Name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={error.name}\n                    />\n                    <TextInputGroup\n                      name=\"email\"\n                      label=\"Email\"\n                      placeholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      type=\"email\"\n                      error={error.email}\n                    />\n                    <TextInputGroup\n                      name=\"phone\"\n                      label=\"Phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={error.phone}\n                    />\n                    <input\n                      type=\"submit\"\n                      value=\"Add contact\"\n                      className=\"btn btn-block\"\n                      onClick={this.onSubmit.bind(this, dispatch)}\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    error: {}\n  };\n\n  componentDidMount = async () => {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    this.setState({\n      ...res.data\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ error: { name: \"Name is required\" } });\n    }\n    if (email === \"\") {\n      this.setState({\n        error: { email: \"Email is required\" }\n      });\n    }\n    if (phone === \"\") {\n      this.setState({\n        error: { phone: \"Phone is required\" }\n      });\n    }\n\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      this.state\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, error } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card-mb-3\">\n              <div className=\"card-header\">\n                <h1>Editing a contact</h1>\n                <div className=\"card-body\">\n                  <form>\n                    <TextInputGroup\n                      name=\"name\"\n                      label=\"Name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={error.name}\n                    />\n                    <TextInputGroup\n                      name=\"email\"\n                      label=\"Email\"\n                      placeholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      type=\"email\"\n                      error={error.email}\n                    />\n                    <TextInputGroup\n                      name=\"phone\"\n                      label=\"Phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={error.phone}\n                    />\n                    <input\n                      type=\"submit\"\n                      value=\"Edit contact\"\n                      className=\"btn btn-block\"\n                      onClick={this.onSubmit.bind(this, dispatch)}\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contacts/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\nHeader.prototypes = {\n  branding: PropTypes.string.isRequired\n};\n\nHeader.defaultProps = {\n  branding: \"Ummer Shervani\"\n};\n\nexport default Header;\n","import React from 'react'\n\nexport default function () {\n    return (\n        <div>\n            <h1 className='display-4'> About Contact Manager</h1>\n            <p className='lead'> Manage your contacts with us</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className='display-4'>404 not found</h1>\n            <p className='lead'>Sorry, the page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n\n    state = {\n        title: \"\",\n        completed: \"\"\n    }\n\n  componentDidMount() {\n    console.log(\"componentDidMount...\");\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          completed: data.completed\n        })\n      );\n  }\n\n  //   componentDidCatch() {\n  //     console.log(\"componentDidCatch...\");\n  //   }\n  //   componentDidUpdate() {\n  //     console.log(\"componentDidUpdate...\");\n  //   }\n\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount...\");\n  //   }\n\n  //   componentWillReceiveProps() {\n  //     console.log(\"componentWillReceiveProps...\");\n  //   }\n  //   componentWillUnmount() {\n  //     console.log(\"componentWillUnmount...\");\n  //   }\n\n  //   componentWillUpdate() {\n  //     console.log(\"componentWillUpdate...\");\n  //   }\n\n    render() {\n        const { title, complete } = this.state;\n    return (\n      <div>\n        <h1>Hello, {title}</h1>\n        <h1>Complete ? {complete}</h1>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\n// eslint-disable-next-line\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layouts/Header\";\nimport About from \"./components/pages/About\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider } from \"./context\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <h1>This is an App component</h1>\n          <Header branding=\"Contacts\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contacts/add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contacts/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}